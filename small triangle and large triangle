#include <stdio.h>
#include <stdlib.h>
#include <math.h>

struct triangle
{
	int a;
	int b;
	int c;
};

typedef struct triangle triangle;
int sort_by_area(triangle *tr, int n) 
{
  int i,k,o,q,w;
  float p;
 double min;
  double *s;
  s=malloc(n*sizeof(int*));
  for(i=0;i<n;i++)
  {
    p=(((tr[i].a)+(tr[i].b)+(tr[i].c))/2.0);
    s[i]=(double)(p*(p-(tr[i].a))*(p-(tr[i].b))*(p-(tr[i].c)));
  }
  for(k=0;k<n-1;k++)
  {
  for(i=0;i<n-1-k;i++)
  {
      if(s[i]>s[i+1])
      {
        min = s[i];
          s[i]=s[i+1];s[i+1]=min;
       o=tr[i].a; tr[i].a=tr[i+1].a; tr[i+1].a=o;
       q=tr[i].b; tr[i].b=tr[i+1].b; tr[i+1].b=q;
       w=tr[i].c; tr[i].c=tr[i+1].c; tr[i+1].c=w;
      }
  }

}
return 0;
}
int main()
{
	int n;
	scanf("%d", &n);
	triangle *tr = malloc(n * sizeof(triangle));
	for (int i = 0; i < n; i++) {
		scanf("%d%d%d", &tr[i].a, &tr[i].b, &tr[i].c);
	}
	sort_by_area(tr, n);
	for (int i = 0; i < n; i++) {
		printf("%d %d %d\n", tr[i].a, tr[i].b, tr[i].c);
	}
  return 0;
 }
